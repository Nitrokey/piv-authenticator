// Copyright (C) 2022 Nitrokey GmbH
// SPDX-License-Identifier: LGPL-3.0-only

[
    IoTest(
        name: "Verify",
        cmd_resp: [
            VerifyDefaultApplicationPin(),
            VerifyDefaultGlobalPin(expected_status: FunctionNotSupported)
        ]
    ),
    IoTest(
        name: "Select",
        cmd_resp: [
            Select
        ]
    ),
    IoTest(
        name: "Default management key",
        cmd_resp: [
            AuthenticateManagement(
                key: (
                    algorithm: Tdes,
                    key: "0102030405060708 0102030405060708 0102030405060708"
                )
            )
        ]
    ),
    IoTest(
        name: "Aes management key",
        cmd_resp: [
            AuthenticateManagement(
                key: (
                    algorithm: Tdes,
                    key: "0102030405060708 0102030405060708 0102030405060708"
                )
            ),
            SetManagementKey(
                key: (
                    algorithm: Aes256,
                    key: "0102030405060708 0102030405060708 0102030405060708 0102030405060708"
                )
            ),
            AuthenticateManagement(
                key: (
                    algorithm: Aes256,
                    key: "0102030405060708 0102030405060708 0102030405060708 0102030405060708"
                )
            )
        ]
    ),
    IoTest(
        name: "unauthenticated set management key",
        cmd_resp: [
            SetManagementKey(
                key: (
                    algorithm: Aes256,
                    key: "0102030405060708 0102030405060708 0102030405060708 0102030405060708"
                ),
                expected_status: SecurityStatusNotSatisfied,
            ),
            AuthenticateManagement(
                key: (
                    algorithm: Aes256,
                    key: "0102030405060708 0102030405060708 0102030405060708 0102030405060708"
                ),
                expected_status_challenge: IncorrectP1OrP2Parameter,
                expected_status_response: ConditionsOfUseNotSatisfied,
            )
        ]
    ),
    IoTest(
        name: "Generate key",
        cmd_resp: [
            AuthenticateManagement(
                key: (
                    algorithm: Tdes,
                    key: "0102030405060708 0102030405060708 0102030405060708"
                )
            ),
            IoData(
                input: "00 47 009A 05 
                                AC 03 
                                     80 01 11",
                output: Len(70),
            )
        ]
    )
]
